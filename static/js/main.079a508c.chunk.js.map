{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","broder","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,cACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBADtB,IAEC,gCACC,6BAAKF,IADN,IAEC,4BAAIC,WCaOK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKGC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAY,mCACZW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCDI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACEJ,EAAMK,YCiBKC,E,kDAnBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAS,GAHO,E,8DAQAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACN,kDAEDG,KAAKX,MAAMK,a,GAjBOQ,aCiDZC,G,wDA3Cd,aAAc,IAAD,8BACZ,gBAiBDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAjBzC,EAAKX,MAAO,CACXlB,OAAQ,GACRK,YAAa,IAJF,E,gEAQO,IAAD,OAGlByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAQjC,MACuBZ,KAAKJ,MAA5BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAW,KAAhB,UACC,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAUmC,WAPxB,gD,GA7BgBX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.079a508c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shawow-5'> {/* tachyons套件 */}\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} /> {/* templete string */}\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2> {/* 因為是js expression，所以要被包起來 */}\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default Card;\n\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} /* 因為是迴圈必須給 */\n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t} \n\t\t</div>\n\t);\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype = 'search' \n\t\t\t\tplaceholder = 'search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\t\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style = {{ overflow: 'scroll', broder: '5px solid black', height: '800px' }} > \n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{ //繼承react component\n\tconstructor(props){\n\t\tsuper(props); //access to this.props in the constructor\n\t\tthis.state = {\n\t\t\thasError:false\n\t\t}\n\t}\n\n\t//是lifecycle hook, 作用像是try/catch\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError: true})\n\t}\n\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>Ooops. not good.</h1>\n\t\t}\n\t\treturn this.props.children //Cardlist\n\t}\n}\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component{\n\tconstructor(){ //宣告state\n\t\tsuper();//呼叫parent 的constructor，很重要！！\n\t\tthis.state ={  //兩個state，為在App中改變的內容\n\t\t\trobots: [],//先給空的，之後帶入robots\n\t\t\tsearchfield: ''\n\t\t}\n\t}   \n\n\tcomponentDidMount(){\n\t\t//透過api機器人的抓資料，而不是直接透過robots檔案輸入\n\t\t//make request and receive response\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t//update user with setstate\n\t\t\t.then(users => this.setState({ robots: users}));\n\t}\n\n\t//像是觸發事件，因為是自己建立的method，所以要這樣寫\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value})//update state，依據輸入內容\n\t}\n\n\trender(){ //拿到props\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot => { //從輸入匡連結到robot的cardlist\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t})\n\t\treturn !robots.length ?\n\t\t<h1>Loadind...</h1> :\n\t\t(\n\t\t\t<div className ='tc'>\n\t\t\t\t<h1 className = 'f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/> \n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots = {filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';//parnet of Card\nimport reportWebVitals from './reportWebVitals';//目前不會用到\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();//目前不會用到\n"],"sourceRoot":""}